<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.neuedu.crm.mapper.OrdersMapper">

	<resultMap id="BaseResultMap" type="com.neuedu.crm.bean.Orders">
		<id column="order_id" jdbcType="INTEGER" property="orderId" />
		<!-- <result column="customer_id" jdbcType="INTEGER" property="customerId" 
			/> -->
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="date" jdbcType="TIMESTAMP" property="date" />
		<result column="state" jdbcType="VARCHAR" property="state" />
		<association property="customer" column="customer_id"
			javaType="Customer" select="findCustomer">
			<id column="customer_id" property="customerId" />
			<result column="name" property="name" />
		</association>
	</resultMap>

	<select id="findCustomer" parameterType="int" resultType="Customer">
		select
		*
		from customer
		where customer_id=#{customerId}
	</select>

	<select id="findAll" resultMap="BaseResultMap">
		select * from orders
	</select>

	<select id="findById" parameterType="INTEGER" resultMap="BaseResultMap">
		select * from orders
		<where>
			<if test="_parameter != null">
				order_id = #{orderId}
			</if>
		</where>
	</select>

	<update id="editOrder" parameterType="Orders">
		update orders
		<set>
			<if test="customer != null and customer.customerId != 0">
				customer_id = #{customer.customerId},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="date != null">
				date = #{date},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=VARCHAR},
			</if>
		</set>
		where order_id = #{orderId}
	</update>

	<insert id="addOrder" parameterType="Orders">
		insert into orders
		(order_id, customer_id, address,
		date, state)
		values (0,
		#{customer.customerId},
		#{address,jdbcType=VARCHAR},
		#{date,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR})
	</insert>

	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from orders
		where
		order_id = #{orderId,jdbcType=INTEGER}
	</delete>

	<sql id="Base_Column_List">
		order_id, customer_id, address, date, state
	</sql>

	<select id="findByExample" parameterType="Orders" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from orders
		<where>
			<if test="customer != null and customer.customerId != 0">
				customer_id = #{customer.customerId}
			</if>
			<if test="date != null">
				date like concat(concat("%",#{date}),"%")
			</if>
			<if test="address != null and address != &quot;&quot;">
				address like
				concat(concat("%",#{address,jdbcType=VARCHAR}),"%")
			</if>
			<if test="state != null and state != &quot;&quot;">
				state like
				concat(concat("%",#{state,jdbcType=VARCHAR}),"%")
			</if>
		</where>
	</select>

	<select id="findByPager" parameterType="Pager" resultMap="BaseResultMap">
		select * from orders where 1=1
		<if test="param != null and param.customer != null and param.customer.customerId != null">
			and customer_id = #{param.customer.customerId}
		</if>
		<!-- <if test="param != null and param.date != null">
			and date like concat(concat("%",#{param.date}),"%")
		</if> -->
		<if test="param != null and param.address != null">
			and address like
			concat(concat("%",#{param.address,jdbcType=VARCHAR}),"%")
		</if>
		<if test="param != null and param.state != null">
			and state = #{param.state,jdbcType=VARCHAR}
		</if>
		<choose>
			<when test="param != null and param.startCreateDate != null">
				and date between #{param.startCreateDate}
			</when>
			<otherwise>
				and date between '0000-00-00 00:00:00'
			</otherwise>
		</choose>
		<choose>
			<when test="param != null and param.endCreateDate != null">
				and #{param.endCreateDate}
			</when>
			<otherwise>
				and now()
			</otherwise>
		</choose>
		limit #{startIndex},#{pageSize}
	</select>

	<select id="countForPager" parameterType="Pager" resultType="int">
		select count(order_id) from orders where 1=1
		<if test="param != null and param.customer != null and param.customer.customerId != null">
			and customer_id = #{param.customer.customerId}
		</if>
		<!-- <if test="param != null and param.date != null">
			and date like concat(concat("%",#{param.date}),"%")
		</if> -->
		<if test="param != null and param.address != null">
			and address like
			concat(concat("%",#{param.address,jdbcType=VARCHAR}),"%")
		</if>
		<if test="param != null and param.state != null">
			and state = #{param.state,jdbcType=VARCHAR}
		</if>
		<choose>
			<when test="param != null and param.startCreateDate != null">
				and date between #{param.startCreateDate}
			</when>
			<otherwise>
				and date between '0000-00-00 00:00:00'
			</otherwise>
		</choose>
		<choose>
			<when test="param != null and param.endCreateDate != null">
				and #{param.endCreateDate}
			</when>
			<otherwise>
				and now()
			</otherwise>
		</choose>
	</select>
</mapper>